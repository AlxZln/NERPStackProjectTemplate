import {
  init_FormControl
} from "./chunk-TQZDBCRX.js";
import {
  formControlState,
  init_formControlState
} from "./chunk-72RV4RTD.js";
import {
  Typography_default,
  init_Typography
} from "./chunk-AIXLDSU4.js";
import {
  useFormControl
} from "./chunk-HVKUKNWF.js";
import {
  capitalize_default,
  init_capitalize
} from "./chunk-PXNO57KY.js";
import {
  init_base
} from "./chunk-AYRUKP22.js";
import {
  init_generateUtilityClass,
  init_styled,
  init_useThemeProps,
  styled_default,
  useThemeProps
} from "./chunk-JALNUSSG.js";
import {
  clsx_m_default,
  init_clsx_m
} from "./chunk-QA6UPO5E.js";
import {
  _objectWithoutPropertiesLoose,
  init_objectWithoutPropertiesLoose
} from "./chunk-FSUFDOTD.js";
import {
  composeClasses,
  generateUtilityClass,
  generateUtilityClasses,
  init_esm,
  refType_default
} from "./chunk-DUIUJXMV.js";
import {
  require_prop_types
} from "./chunk-F2ITIO7K.js";
import {
  require_jsx_runtime
} from "./chunk-U62YBD46.js";
import {
  _extends,
  init_extends
} from "./chunk-WH2AMN5A.js";
import {
  require_react
} from "./chunk-YP55OVAM.js";
import {
  __esm,
  __export,
  __toESM
} from "./chunk-S5KM4IGW.js";

// node_modules/@mui/material/esm/FormControlLabel/formControlLabelClasses.js
function getFormControlLabelUtilityClasses(slot) {
  return generateUtilityClass("MuiFormControlLabel", slot);
}
var formControlLabelClasses, formControlLabelClasses_default;
var init_formControlLabelClasses = __esm({
  "node_modules/@mui/material/esm/FormControlLabel/formControlLabelClasses.js"() {
    init_esm();
    init_generateUtilityClass();
    formControlLabelClasses = generateUtilityClasses("MuiFormControlLabel", ["root", "labelPlacementStart", "labelPlacementTop", "labelPlacementBottom", "disabled", "label", "error"]);
    formControlLabelClasses_default = formControlLabelClasses;
  }
});

// node_modules/@mui/material/esm/FormControlLabel/FormControlLabel.js
var React, import_prop_types, import_jsx_runtime, import_jsx_runtime2, _excluded, useUtilityClasses, FormControlLabelRoot, FormControlLabel, FormControlLabel_default;
var init_FormControlLabel = __esm({
  "node_modules/@mui/material/esm/FormControlLabel/FormControlLabel.js"() {
    init_objectWithoutPropertiesLoose();
    init_extends();
    React = __toESM(require_react());
    import_prop_types = __toESM(require_prop_types());
    init_clsx_m();
    init_esm();
    init_base();
    init_FormControl();
    init_Typography();
    init_capitalize();
    init_styled();
    init_useThemeProps();
    init_formControlLabelClasses();
    init_formControlState();
    import_jsx_runtime = __toESM(require_jsx_runtime());
    import_jsx_runtime2 = __toESM(require_jsx_runtime());
    _excluded = ["checked", "className", "componentsProps", "control", "disabled", "disableTypography", "inputRef", "label", "labelPlacement", "name", "onChange", "slotProps", "value"];
    useUtilityClasses = (ownerState) => {
      const {
        classes,
        disabled,
        labelPlacement,
        error
      } = ownerState;
      const slots = {
        root: ["root", disabled && "disabled", `labelPlacement${capitalize_default(labelPlacement)}`, error && "error"],
        label: ["label", disabled && "disabled"]
      };
      return composeClasses(slots, getFormControlLabelUtilityClasses, classes);
    };
    FormControlLabelRoot = styled_default("label", {
      name: "MuiFormControlLabel",
      slot: "Root",
      overridesResolver: (props, styles) => {
        const {
          ownerState
        } = props;
        return [{
          [`& .${formControlLabelClasses_default.label}`]: styles.label
        }, styles.root, styles[`labelPlacement${capitalize_default(ownerState.labelPlacement)}`]];
      }
    })(({
      theme,
      ownerState
    }) => _extends({
      display: "inline-flex",
      alignItems: "center",
      cursor: "pointer",
      verticalAlign: "middle",
      WebkitTapHighlightColor: "transparent",
      marginLeft: -11,
      marginRight: 16,
      [`&.${formControlLabelClasses_default.disabled}`]: {
        cursor: "default"
      }
    }, ownerState.labelPlacement === "start" && {
      flexDirection: "row-reverse",
      marginLeft: 16,
      marginRight: -11
    }, ownerState.labelPlacement === "top" && {
      flexDirection: "column-reverse",
      marginLeft: 16
    }, ownerState.labelPlacement === "bottom" && {
      flexDirection: "column",
      marginLeft: 16
    }, {
      [`& .${formControlLabelClasses_default.label}`]: {
        [`&.${formControlLabelClasses_default.disabled}`]: {
          color: (theme.vars || theme).palette.text.disabled
        }
      }
    }));
    FormControlLabel = React.forwardRef(function FormControlLabel2(inProps, ref) {
      var _slotProps$typography;
      const props = useThemeProps({
        props: inProps,
        name: "MuiFormControlLabel"
      });
      const {
        className,
        componentsProps = {},
        control,
        disabled: disabledProp,
        disableTypography,
        label: labelProp,
        labelPlacement = "end",
        slotProps = {}
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
      const muiFormControl = useFormControl();
      let disabled = disabledProp;
      if (typeof disabled === "undefined" && typeof control.props.disabled !== "undefined") {
        disabled = control.props.disabled;
      }
      if (typeof disabled === "undefined" && muiFormControl) {
        disabled = muiFormControl.disabled;
      }
      const controlProps = {
        disabled
      };
      ["checked", "name", "onChange", "value", "inputRef"].forEach((key) => {
        if (typeof control.props[key] === "undefined" && typeof props[key] !== "undefined") {
          controlProps[key] = props[key];
        }
      });
      const fcs = formControlState({
        props,
        muiFormControl,
        states: ["error"]
      });
      const ownerState = _extends({}, props, {
        disabled,
        labelPlacement,
        error: fcs.error
      });
      const classes = useUtilityClasses(ownerState);
      const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;
      let label = labelProp;
      if (label != null && label.type !== Typography_default && !disableTypography) {
        label = (0, import_jsx_runtime.jsx)(Typography_default, _extends({
          component: "span"
        }, typographySlotProps, {
          className: clsx_m_default(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),
          children: label
        }));
      }
      return (0, import_jsx_runtime2.jsxs)(FormControlLabelRoot, _extends({
        className: clsx_m_default(classes.root, className),
        ownerState,
        ref
      }, other, {
        children: [React.cloneElement(control, controlProps), label]
      }));
    });
    true ? FormControlLabel.propTypes = {
      checked: import_prop_types.default.bool,
      classes: import_prop_types.default.object,
      className: import_prop_types.default.string,
      componentsProps: import_prop_types.default.shape({
        typography: import_prop_types.default.object
      }),
      control: import_prop_types.default.element.isRequired,
      disabled: import_prop_types.default.bool,
      disableTypography: import_prop_types.default.bool,
      inputRef: refType_default,
      label: import_prop_types.default.node,
      labelPlacement: import_prop_types.default.oneOf(["bottom", "end", "start", "top"]),
      name: import_prop_types.default.string,
      onChange: import_prop_types.default.func,
      slotProps: import_prop_types.default.shape({
        typography: import_prop_types.default.object
      }),
      sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),
      value: import_prop_types.default.any
    } : void 0;
    FormControlLabel_default = FormControlLabel;
  }
});

// node_modules/@mui/material/esm/FormControlLabel/index.js
var FormControlLabel_exports = {};
__export(FormControlLabel_exports, {
  default: () => FormControlLabel_default,
  formControlLabelClasses: () => formControlLabelClasses_default,
  getFormControlLabelUtilityClasses: () => getFormControlLabelUtilityClasses
});
var init_FormControlLabel2 = __esm({
  "node_modules/@mui/material/esm/FormControlLabel/index.js"() {
    init_FormControlLabel();
    init_formControlLabelClasses();
    init_formControlLabelClasses();
  }
});

export {
  getFormControlLabelUtilityClasses,
  formControlLabelClasses_default,
  FormControlLabel_default,
  FormControlLabel_exports,
  init_FormControlLabel2 as init_FormControlLabel
};
//# sourceMappingURL=chunk-DDAFCPUE.js.map
